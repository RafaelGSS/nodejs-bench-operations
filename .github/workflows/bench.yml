name: 'Run Benchmark'

on:
  workflow_dispatch:
    inputs:
      bench-file:
        required: true
        type: string
  workflow_call:
    inputs:
      bench-file:
        required: true
        type: string

permissions:
  issues: write

jobs:
  benchmark:
    continue-on-error: true

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.0.0, 16.18.1, 16.19.0, 16.20.0, 18.0.0, 18.14.2, 18.15.0, 18.16.0, 19.0.0, 19.8.0, 19.8.1, 19.9.0, 20.0.0]
      fail-fast: true

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: npm install

      - name: Run Benchmark
        run: node bench/${{ inputs.bench-file }} > ./bench-result.md
        env:
          CI: true

      - name: Notify on Error
        if: ${{ failure() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Benchmark ${{ inputs.bench-file }} failed on v${{ matrix.node-version }}
          body: |
            ### Context
            [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            status -        `${{ job.status }}`
          assignees: RafaelGSS
          labels: bug

      - name: Output Failure
        if: ${{ failure() }}
        uses: cloudposse/github-action-matrix-outputs-write@main
        with:
          matrix-step-name: benchmark-${{ inputs.bench-file }}
          matrix-key: ${{ matrix.node-version }}
          outputs: |-
            failure: 'true'
            result: ''

      - name: Set Env Variable
        run: |
          result=$(cat ./bench-result.md)
          echo "$result" >> $GITHUB_STEP_SUMMARY
          export RESULT_IN_BASE64=$(cat ./bench-result.md | base64 -w 0)
          echo "BENCH_RESULT=$RESULT_IN_BASE64" >> "$GITHUB_ENV"

      ## Write for matrix outputs workaround
      - uses: cloudposse/github-action-matrix-outputs-write@main
        id: out
        with:
          matrix-step-name: benchmark-${{ inputs.bench-file }}
          matrix-key: ${{ matrix.node-version }}
          outputs: |-
            failure: 'false'
            result: ${{ env.BENCH_RESULT }}

  ## Read matrix outputs
  read:
    runs-on: ubuntu-latest
    needs: [benchmark]

    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@main
        id: read
        with:
          matrix-step-name: benchmark-${{ inputs.bench-file }}

    outputs:
      result: '${{ steps.read.outputs.result }}'

  commit:
    runs-on: ubuntu-latest
    if: ${{ needs.read.outputs.failure != 'true' }}
    needs: [read]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Use Node.js v20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Write Benchmark Reports
        run: |
          node scripts/write-bench-results.mjs
          node scripts/generate-reports.mjs
        env:
          BENCH_FILE: ${{ inputs.bench-file }}
          BENCH_RESULT: ${{ needs.read.outputs.result }}

      - name: Commit and Push Updated Results
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: 'main'
          commit_message: 'chore(${{ inputs.bench-file }}): update benchmark results'
